name: 'Terraform Plan/Apply'

on:
  push:
    branches:
    - main
    - dev

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

#These environment variables are used by the terraform azure provider to setup OIDD authenticate. 
env:
  ARM_CLIENT_ID: "${{ secrets.INFRA_CLIENT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.INFRA_CLIENT_SECRET }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"

  RG_TF_PREFIX: "rg-trf-fintrack"
  ST_TF_PREFIX: "sttrffintrack"
  CNTR_TF_NAME: "ctrf"
  ENVIRONMENT_TAG: "dev"
  REGION: "westeurope"

jobs:
  infra-deploy:
    name: 'Az Infra Deploy'
    runs-on: ubuntu-latest
    # defaults:
    #   run:
    #     working-directory: ./terraform

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    - name: Az CLI login
      uses: azure/login@v1.4.6
      with:
        creds: '{"clientId":"${{ env.ARM_CLIENT_ID }}","clientSecret":"${{ env.ARM_CLIENT_SECRET }}","subscriptionId":"${{ env.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ env.ARM_TENANT_ID }}"}'

    # - uses: azure/arm-deploy@v1
    #   with:
    #     scope: subscription
    #     region: ${{ env.REGION }}
    #     template: main.bicep
    #     parameters: tfRgName=${{ env.RG_TF_PREFIX }}-${{ env.ENVIRONMENT_TAG }} tfSaName=${{ env.ST_TF_PREFIX }}${{ env.ENVIRONMENT_TAG }} tfCntrName=${{ env.CNTR_TF_NAME }} region=${{ env.REGION }} 

    - run: |
        echo "RG_TF_NAME=${{ env.RG_TF_PREFIX }}-${{ env.ENVIRONMENT_TAG }}" >> $GITHUB_ENV
        echo "ST_TF_NAME=${{ env.ST_TF_PREFIX }}${{ env.ENVIRONMENT_TAG }}" >> $GITHUB_ENV

    - uses: cschleiden/replace-tokens@v1.2
      with:
        tokenPrefix: '__'
        tokenSuffix: '__'
        files: '["**/*"]'

    - run: cat terraform/tfbackend.conf

    # Install the latest version of the Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_wrapper: false

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      working-directory: terraform
      run: terraform init -backend-config=tfbackend.conf

    # Checks that all Terraform configuration files adhere to a canonical format
    # Will fail the build if not
    - name: Terraform Format
      working-directory: terraform
      run: terraform fmt -check

    # Terraform Apply
    - name: Terraform Apply
      working-directory: terraform
      run: terraform apply -auto-approve
    
    # - name: Go mod init
    #   run: go mod init example.com

    - name: Build AzFunc
      # working-directory: HttpExample
      run: GOOS=linux GOARCH=amd64 go build handler.go

    - name: 'Deploy to Azure'
      uses: Azure/functions-action@v1
      with:
        app-name: funcapp-fintrack-dev
        